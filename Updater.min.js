// REWIND GAMING BROADCAST OVERLAY UPDATER
// VERSION 1.0
// LICENSED UNDER GPL-3.0

// FOR DOCUMENTATION AND LICENSING INFORMATION PLEASE SEE:
// https://github.com/rewindrl/updater

class GraphicsUpdater{constructor(t,e,a,s,r=3e3,o=!0){this.updating=!1;const i=(()=>{let e=[];for(let a of Object.values(t))for(let t of Object.keys(a))e.push(t.match(/[a-zA-Z]+|[0-9]+/g));return e})().map(t=>[this.colToIndex(t[0]),parseInt(t[1])]),n=(()=>{const t=i.map(t=>t[0]),e=i.map(t=>t[1]);return[Math.min(...t),Math.min(...e),Math.max(...t),Math.max(...e)]})(),l=`${this.indexToCol(n[0])}${n[1]}:${this.indexToCol(n[2])}${n[3]}`;this.url=`https://sheets.googleapis.com/v4/spreadsheets/${e}/values/${a}!${l}?key=${s}&majorDimension=COLUMNS&valueRenderOption=FORMATTED_VALUE`,this.arrayMap=(()=>{let e={};for(let a of Object.keys(t)){e[a]={};for(let s of Object.keys(t[a])){let r=s.match(/[a-zA-Z]+|[0-9]+/g);r[0]=this.colToIndex(r[0]),r=r.map((t,e)=>t-n[e]),e[a][r.toString()]=t[a][s]}}return e})(),this.simpleOperations=["string","image"],this.operations={string:(t,e)=>document.getElementById(t).innerHTML=e,image:(t,e)=>document.getElementById(t).src=e,counter:(t,e)=>{try{e=parseInt(e)}catch(t){console.warn("Failed to parse counter number from spreadsheet: make sure it's a number!")}for(let a=0;a<e;a++)document.getElementById(t[a]).style.display="";for(let a=e;a<t.length;a++)document.getElementById(t[a]).style.display="none"},switch:(t,e)=>{for(let a of Object.keys(t))document.getElementById(t[a]).style.display=a==e?"":"none"}},this.updateInterval=r,o&&this.startUpdating()}async update(){let t,e,a;try{let e=await fetch(this.url);if(!e.ok)throw"Failed to find your spreadsheet!";t=await e.json()}catch(t){throw"Failed to access spreadsheet on Google Sheets API"}t=t.values;for(let s of Object.keys(this.arrayMap)){a=this.simpleOperations.includes(s)?(t,e)=>{if(Array.isArray(t))for(let a of t)this.operations[s](a,e);else this.operations[s](t,e)}:(t,e)=>this.operations[s](t,e);for(let r of Object.keys(this.arrayMap[s])){e=r.split(",").map(t=>t.toString());const o=(()=>{const a=t[e[0]];if(a){if("string"==typeof a[e[1]])return a[e[1]]}return""})();try{a(this.arrayMap[s][r],o)}catch{console.warn(`Failed to update ${this.arrayMap[s][r]}!`)}}}}addOperation(t,e,a=!1){t in this.operations?console.warn(`Failed to add operation ${t} to operation structure - it already exists! Try a different name.`):(this.operations[t]=e,a&&this.simpleOperations.push(t))}importPreset(t){this.addOperation(...Object.values(t))}startUpdating(){this.updating?console.warn("Failed to start updating: the updater is already updating!"):(this.update(),setInterval(this.update.bind(this),this.updateInterval),this.updating=!0)}colToIndex(t){let e,a,s="ABCDEFGHIJKLMNOPQRSTUVWXYZ",r=0;for(e=0,a=t.length-1;e<t.length;e+=1,a-=1)r+=Math.pow(s.length,a)*(s.indexOf(t[e])+1);return r}indexToCol(t){for(var e="",a=1,s=26;(t-=a)>=0;a=s,s*=26)e=String.fromCharCode(parseInt(t%s/a)+65)+e;return e}}